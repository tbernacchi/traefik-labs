---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-foo-bar
  namespace: traefik-v2
  labels:
    app: traefik-foo-bar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik-foo-bar
  template:
    metadata:
      labels:
        app: traefik-foo-bar
    spec:
      containers:
      - image: ambrosiaaaaa/traefik-foo-bar:v0.0.1
        name: traefik-foo-bar
        ports:
        - containerPort: 443
        volumeMounts:
        - name: cert-volume
          mountPath: /cert 
      volumes:
      - name: cert-volume
        persistentVolumeClaim:
          claimName: certificates-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-foo-bar
  namespace: traefik-v2
spec:
  ports:
  - name: traefik-foo-bar
    port: 443
    targetPort: 443
  selector:
    app: traefik-foo-bar
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-myapp-prefix
  namespace: traefik-v2
spec:
  stripPrefix:
    prefixes:
      - /myapp
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-foo-bar
  namespace: traefik-v2
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`traefik.mykubernetes.com`) && (PathPrefix(`/myapp`) 
    kind: Rule
    services:
    - name: traefik-foo-bar
      port: 80
    middlewares:
    - name: strip-myapp-prefix
  tls:
    secretName: traefik-foo-bar-cert
