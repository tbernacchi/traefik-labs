name: Build and push foobar-api container image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: foobar-api
  IMAGE_TAG: v0.0.3
  REGISTRY_USER: ambrosiaaaa
  REGISTRY: docker.io

jobs:
  test:
    runs-on: [my-runner-foobar]

    defaults:
      run:
        working-directory: foobar-api

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Debug: Print working directory
      - name: Print working directory
        run: pwd
        working-directory: foobar-api

      # Debug: List files
      - name: List files
        run: ls -la
        working-directory: foobar-api

    # Debug: Check for go.mod and go.sum
      - name: Check for go.mod and go.sum
        run: |
            echo "Checking for go.mod in foobar-api/"
            if [ -f go.mod ]; then
                echo "go.mod found"
                cat go.mod
            else
              echo "go.mod NOT found in foobar-api/"
              exit 1
            fi
            echo "Checking for go.sum in foobar-api/"
            if [ -f go.sum ]; then
              echo "go.sum found"
              cat go.sum
            else
              echo "go.sum NOT found in foobar-api/"
              exit 1
            fi
        working-directory: foobar-api

      # Debug: List files in root directory
      - name: List files in root directory
        run: ls -la
        working-directory: .

      # Setup Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install dependencies
        run: go mod download

      # Check and run tests
      - name: Check and run tests
        run: |
          TEST_FILES=$(find . -name "*_test.go")
          if [ -z "$TEST_FILES" ]; then
             echo "Erro: Nenhum arquivo de teste encontrado!"
             exit 1
          fi
          go test ./... -v

  build-and-push-with-kaniko:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Substituir a seção Kaniko por Docker Build/Push
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./foobar-api
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
